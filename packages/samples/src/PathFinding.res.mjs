// Generated by ReScript, PLEASE EDIT WITH CARE

import Kaplay from "kaplay";
import * as Pos$Kaplay from "@nojaf/rescript-kaplay/src/Components/Pos.res.mjs";
import * as Rect$Kaplay from "@nojaf/rescript-kaplay/src/Components/Rect.res.mjs";
import * as Text$Kaplay from "@nojaf/rescript-kaplay/src/Components/Text.res.mjs";
import * as Tile$Kaplay from "@nojaf/rescript-kaplay/src/Components/Tile.res.mjs";
import * as Agent$Kaplay from "@nojaf/rescript-kaplay/src/Components/Agent.res.mjs";
import * as Color$Kaplay from "@nojaf/rescript-kaplay/src/Components/Color.res.mjs";
import * as Anchor$Kaplay from "@nojaf/rescript-kaplay/src/Components/Anchor.res.mjs";
import * as Sprite$Kaplay from "@nojaf/rescript-kaplay/src/Components/Sprite.res.mjs";
import * as Outline$Kaplay from "@nojaf/rescript-kaplay/src/Components/Outline.res.mjs";
import * as Primitive_float from "rescript/lib/es6/Primitive_float.js";

let width = 12 * 64;

let height = 8 * 64;

let scale = Primitive_float.min(1.5, Primitive_float.min(window.innerWidth / width, window.innerHeight / height));

let k = Kaplay({
  width: width | 0,
  height: height | 0,
  background: "#f54900",
  scale: scale
});

Rect$Kaplay.Comp({});

Outline$Kaplay.Comp({});

Tile$Kaplay.Comp({});

function make() {
  return [
    k.rect(64, 64),
    k.tile(),
    k.outline(1, k.Color.fromHex("#000000"))
  ];
}

let EmptyTile = {
  make: make
};

Rect$Kaplay.Comp({});

Outline$Kaplay.Comp({});

Color$Kaplay.Comp({});

Tile$Kaplay.Comp({});

function make$1() {
  return [
    k.rect(64, 64),
    k.tile(),
    k.outline(1, k.Color.fromHex("#0AC0B0"), 1),
    k.color(k.Color.fromHex("#46ecd5"))
  ];
}

let WallTile = {
  make: make$1
};

Sprite$Kaplay.Comp({});

Tile$Kaplay.Comp({});

Color$Kaplay.Comp({});

Anchor$Kaplay.Comp({});

Pos$Kaplay.Comp({});

function make$2() {
  return [
    k.tile(),
    k.sprite("squirtle", {
      width: 64,
      height: 64
    }),
    k.color(k.Color.fromHex("#ADD8E6")),
    k.anchor("center"),
    k.pos(64 / 2, 64 / 2),
    "squirtle"
  ];
}

let SquirtleTile = {
  make: make$2
};

Sprite$Kaplay.Comp({});

Tile$Kaplay.Comp({});

Anchor$Kaplay.Comp({});

Pos$Kaplay.Comp({});

Agent$Kaplay.Comp({});

Color$Kaplay.Comp({});

function make$3() {
  return [
    k.sprite("charmander", {
      width: 64,
      height: 64
    }),
    k.anchor("center"),
    k.pos(64 / 2, 64 / 2),
    k.tile(),
    k.color(k.Color.fromHex("#FF746C")),
    k.agent({
      speed: 120,
      allowDiagonals: false
    })
  ];
}

let CharmanderTile = {
  make: make$3
};

Text$Kaplay.Comp({});

Pos$Kaplay.Comp({});

Anchor$Kaplay.Comp({});

function make$4() {
  return k.add([
    k.text("Press space to start", {
      size: 20
    }),
    k.pos(k.width() - 20, k.height() - 20),
    k.anchor("botright")
  ]);
}

let Text = {
  make: make$4
};

function onLoad() {
  let level = k.addLevel([
    "############",
    "#          #",
    "#          #",
    "#          #",
    "############"
  ], {
    tileWidth: 64,
    tileHeight: 64,
    tiles: {
      " ": make,
      "#": make$1
    }
  });
  let squirtle = level.spawn(make$2(), k.vec2(1, 1));
  let charmander = level.spawn(make$3(), k.vec2(7, 4));
  make$4();
  let audio = {
    contents: undefined
  };
  k.onKeyPress(key => {
    if (key !== "space") {
      return;
    }
    let target = squirtle.pos;
    charmander.setTarget(target);
    let audio$1 = audio.contents;
    if (audio$1 !== undefined) {
      if (audio$1.paused) {
        audio$1.play();
      } else {
        audio$1.paused = true;
      }
    } else {
      audio.contents = k.play("beast-in-black");
    }
  });
}

k.loadSprite("squirtle", import.meta.env.BASE_URL + "/sprites/squirtle-rb.png");

k.loadSprite("charmander", import.meta.env.BASE_URL + "/sprites/charmander-rb.png");

k.loadMusic("beast-in-black", import.meta.env.BASE_URL + "/sounds/beast-in-black.mp3");

k.onLoad(onLoad);

let tileSize = 64;

export {
  tileSize,
  width,
  height,
  scale,
  k,
  EmptyTile,
  WallTile,
  SquirtleTile,
  CharmanderTile,
  Text,
  onLoad,
}
/* scale Not a pure module */
